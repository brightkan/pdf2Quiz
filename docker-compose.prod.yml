version: '3.8'

services:
  web:
    build:
      context: .
      target: production
    restart: always
    volumes:
      - static_files:/app/staticfiles
      - media_files:/app/media
    expose:
      - "8000"
    depends_on:
      - db
      - redis
    env_file:
      - .env.prod
    environment:
      - DATABASE_URL=postgres://postgres:${POSTGRES_PASSWORD}@db:5432/postgres
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=False
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - SECRET_KEY=${SECRET_KEY}

  nginx:
    image: nginx:1.25
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_files:/var/www/static
      - media_files:/var/www/media
    ports:
      - "80:80"
    depends_on:
      - web

  db:
    image: postgres:15
    restart: always
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    env_file:
      - .env.prod
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres

  redis:
    image: redis:7
    restart: always
    volumes:
      - redis_data_prod:/data
    command: redis-server --requirepass ${REDIS_PASSWORD}


  # Optional: Celery worker
  celery:
    build:
      context: .
      target: production
    restart: always
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
    env_file:
      - .env.prod
    environment:
      - DATABASE_URL=postgres://postgres:${POSTGRES_PASSWORD}@db:5432/postgres
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=False
    command: celery -A project worker -l info

volumes:
  postgres_data_prod:
  redis_data_prod:
  static_files:
  media_files:
